{"version":3,"sources":["components/NewTask/TaskForm.module.css","hook/use-http.js","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","components/NewTask/NewTask.js","App.js","index.js","components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css"],"names":["module","exports","useHttp","useState","isLoading","setIsLoading","error","setError","sendRequest","useCallback","requestConfig","applyData","fetch","url","method","body","JSON","stringify","headers","response","ok","Error","json","data","message","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","NewTask","sendTask","enterTaskHandler","taskText","createdTask","name","onAddTask","App","tasks","setTasks","fetchTasks","useEffect","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b1c95f59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__1wAfM\"};","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"get\",\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest };\r\n};\r\n\r\nexport default useHttp;\r\n","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from \"../UI/Section\"\nimport TaskItem from \"./TaskItem\"\nimport classes from \"./Tasks.module.css\"\n\nconst Tasks = (props) => {\n  // const [id, setId]=useState(\"\")\n\n  let taskList = <h2>No tasks found. Start adding some!</h2>\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    )\n  }\n\n  let content = taskList\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>\n  }\n\n  if (props.loading) {\n    content = \"Loading tasks...\"\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  )\n}\n\nexport default Tasks\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import Section from \"../UI/Section\"\nimport TaskForm from \"./TaskForm\"\nimport useHttp from \"../../hook/use-http\"\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTask } = useHttp()\n\n  const enterTaskHandler = async (taskText) => {\n    const fetchData = (data) => {\n      const generatedId = data.name // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText }\n      props.onAddTask(createdTask)\n    }\n\n    sendTask(\n      {\n        url: \"https://add-tasks-4062b-default-rtdb.firebaseio.com/.json\",\n        method: \"POST\",\n        body: { text: taskText },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      fetchData\n    )\n  }\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  )\n}\n\nexport default NewTask\n","import React, { useState, useEffect } from \"react\"\nimport useHttp from \"./hook/use-http\"\n\nimport Tasks from \"./components/Tasks/Tasks\"\nimport NewTask from \"./components/NewTask/NewTask\"\n\nfunction App() {\n  const [tasks, setTasks] = useState([])\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp()\n\n  useEffect(() => {\n    const fetchData = (data) => {\n      const loadedTasks = []\n\n      for (const taskKey in data) {\n        loadedTasks.push({ id: taskKey, text: data[taskKey].text })\n      }\n\n      setTasks(loadedTasks)\n    }\n    fetchTasks(\n      { url: \"https://add-tasks-4062b-default-rtdb.firebaseio.com/.json\" },\n      fetchData\n    )\n  }, [fetchTasks])\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task))\n  }\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__35Ii9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__39sGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2gv4C\"};"],"sourceRoot":""}